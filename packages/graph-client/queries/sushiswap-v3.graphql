query SushiSwapV3Pool(
    $id: ID!
    $block: SUSHISWAP_V3_Block_height,
    $subgraphError: _SubgraphErrorPolicy_! = deny
) {
  pool: SUSHISWAP_V3_pool(
    id: $id,
    block: $block, 
    subgraphError: $subgraphError
  ) {
    id
    token0 {
      id
      symbol
      name
      decimals
    }
    token1 {
      id
      symbol
      name
      decimals
    }
    feeTier
    liquidity
    volumeToken0
    volumeToken1
    volumeUSD
    feesUSD
    txCount
    totalValueLockedToken0
    totalValueLockedToken1
    totalValueLockedETH
    totalValueLockedUSD

    createdAtTimestamp
    createdAtBlockNumber

    poolHourData(first: 168, orderBy: periodStartUnix, orderDirection: desc) {
      id
      periodStartUnix
      tvlUSD
      volumeUSD
      feesUSD
      txCount
    }

    poolDayData(first: 730, orderBy: date, orderDirection: desc) {
      id
      date
      tvlUSD
      volumeUSD
      feesUSD
      txCount
    }
  }
}

query SushiSwapV3DayDatas($first: Int = 1000, $skip: Int, $orderBy: SUSHISWAP_V3_UniswapDayData_orderBy, $orderDirection: SUSHISWAP_V3_OrderDirection, $where: SUSHISWAP_V3_UniswapDayData_filter) {
  uniswapDayDatas: SUSHISWAP_V3_uniswapDayDatas(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDirection, where: $where) {
    id
    date
    volumeETH
    volumeUSD
    volumeUSDUntracked
    feesUSD
    txCount
    tvlUSD
  }
}

query PoolsByTokenPair($tokenId0: String!, $tokenId1: String!) {
  pools: poolsByTokenPair(tokenId0: $tokenId0, tokenId1: $tokenId1) {
    id
    feeTier
    liquidity
    sqrtPrice
    feeGrowthGlobal0X128
    feeGrowthGlobal1X128
    token0Price
    token1Price
    tick
    observationIndex
    volumeToken0
    volumeToken1
    volumeUSD
    untrackedVolumeUSD
    feesUSD
    collectedFeesToken0
    collectedFeesToken1
    collectedFeesUSD
    totalValueLockedToken0
    totalValueLockedToken1
    totalValueLockedETH
    totalValueLockedUSD
    totalValueLockedUSDUntracked
    liquidityProviderCount
  }
}

query V3Factories($chainIds: [BigInt!]!) {
  factories: v3factoriesByChainIds(chainIds: $chainIds) {
    id
    chainId
    totalValueLockedUSD
    totalVolumeUSD
    poolCount
  }
}

query V3Transactions($first: Int = 100, $skip: Int = 0, $orderBy: SUSHISWAP_V3_Transaction_orderBy = timestamp, $orderDir: SUSHISWAP_V3_OrderDirection = desc, $where: SUSHISWAP_V3_Transaction_filter) {
  transactions: SUSHISWAP_V3_transactions(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    timestamp
    blockNumber
    mints {
      id
      owner
      sender
      origin
      amount
      amount0
      amount1
      amountUSD
      logIndex
    }
    burns {
      id
      owner
      origin
      amount
      amount0
      amount1
      amountUSD
      logIndex
    }
    swaps {
      id
      sender
      recipient
      origin
      amount0
      amount1
      amountUSD
      logIndex
    }
    collects {
      id
      owner
      amount0
      amount1
      amountUSD
      logIndex
    }
  }
}

query V3Burns($first: Int = 100, $skip: Int = 0, $orderBy: SUSHISWAP_V3_Burn_orderBy = timestamp, $orderDir: SUSHISWAP_V3_OrderDirection = desc, $where: SUSHISWAP_V3_Burn_filter) {
  burns: SUSHISWAP_V3_burns(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    owner
    origin
    amount
    amount0
    amount1
    amountUSD
    logIndex
    transaction {
      id
      timestamp
      blockNumber
    }
  }
}

query V3Mints($first: Int = 100, $skip: Int = 0, $orderBy: SUSHISWAP_V3_Mint_orderBy = timestamp, $orderDir: SUSHISWAP_V3_OrderDirection = desc, $where: SUSHISWAP_V3_Mint_filter) {
  mints: SUSHISWAP_V3_mints(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    owner
    sender
    origin
    amount
    amount0
    amount1
    amountUSD
    logIndex
    transaction {
      id
      timestamp
      blockNumber
    }
  }
}

query V3Swaps($first: Int = 100, $skip: Int = 0, $orderBy: SUSHISWAP_V3_Swap_orderBy = timestamp, $orderDir: SUSHISWAP_V3_OrderDirection = desc, $where: SUSHISWAP_V3_Swap_filter) {
  swaps: SUSHISWAP_V3_swaps(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    sender
    recipient
    origin
    amount0
    amount1
    amountUSD
    logIndex
    transaction {
      id
      timestamp
      blockNumber
    }
  }
}

query V3Collects($first: Int = 100, $skip: Int = 0, $orderBy: SUSHISWAP_V3_Collect_orderBy = timestamp, $orderDir: SUSHISWAP_V3_OrderDirection = desc, $where: SUSHISWAP_V3_Collect_filter) {
  collects: SUSHISWAP_V3_collects(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    owner
    amount0
    amount1
    amountUSD
    logIndex
    transaction {
      id
      timestamp
      blockNumber
    }
  }
}
