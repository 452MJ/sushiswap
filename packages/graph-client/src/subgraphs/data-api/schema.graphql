type Pool {
  id: ID!
  chainId: Int!
  name: String!
  address: String!
  createdAt: String!
  swapFee: Float!
  protocol: String!
  token0Price: Float!
  token1Price: Float!
  token0Address: String!
  token1Address: String!
  token0PriceUSD: Float!
  token1PriceUSD: Float!
  liquidityUSD: Float!
  txCount1h: Int!
  txCount1d: Int!
  feeUSD1h: Float!
  feeUSD1d: Float!
  volumeUSD1h: Float!
  volumeUSD1d: Float!
  feeApr1d: Float!
  totalApr1d: Float!
  incentiveApr: Float!
  isSmartPool: Boolean!
  isIncentivized: Boolean!
  wasIncentivized: Boolean!
  source: String!
}

type SimpleToken {
  id: String!
  chain: String!
  chainId: Int!
  name: String!
  symbol: String
  decimals: Int!
  logoUrl: String
  protocolId: String!
  price: Float!
  isVerified: Boolean!
  isCore: Boolean!
  isWallet: Boolean!
  timeAt: Int
  amount: Float!
  amountUSD: Float!
}

type PortfolioToken {
  id: String!
  chain: String!
  chainId: Int!
  name: String!
  symbol: String
  decimals: Int!
  logoUrl: String
  protocolId: String!
  price: Float!
  price24hChange: Float
  isVerified: Boolean!
  isCore: Boolean!
  isWallet: Boolean!
  timeAt: Int
  amount: Float!
  rawAmount: Float!
  amountUSD: Float!
}

type V2PortfolioPosition {
  id: String!
  chainId: Int!
  chain: String!
  protocol: String!
  protocolId: String!
  protocolLogoUrl: String!
  address: String!
  name: String!
  swapFee: Float!
  token0: SimpleToken!
  token1: SimpleToken!
  amountUSD: Float!
  updatedAt: Int
}

enum RangeStatus {
  IN_RANGE
  OUT_OF_RANGE
  UNKNOWN
}

type V3PortfolioPosition {
  id: String!
  chainId: Int!
  chain: String!
  protocol: String!
  protocolId: String!
  protocolLogoUrl: String!
  address: String!
  name: String!
  swapFee: Float!
  positionId: Int!
  range: RangeStatus!
  token0: SimpleToken!
  token1: SimpleToken!
  fees: [SimpleToken]!
  amountUSD: Float!
  updatedAt: Int
}

type PortfolioSmartPosition {
  id: String!
  chainId: Int!
  chain: String!
  protocol: String!
  protocolId: String!
  protocolLogoUrl: String!
  address: String!
  name: String!
  vaultAddress: String!
  swapFee: Float!
  token0: SimpleToken!
  token1: SimpleToken!
  strategy: String!
  amountUSD: Float!
  updatedAt: Int
}

type FuroPosition {
  id: String!
  chainId: Int!
  chain: String!
  protocol: String!
  protocolId: String!
  protocolLogoUrl: String!
  address: String!
  name: String!
  positionId: Int!
  token: SimpleToken!
  updatedAt: Int
}

type PortfolioPositions {
  totalUSD: Float!
  v2Positions: [V2PortfolioPosition]!
  v3Positions: [V3PortfolioPosition]!
  smartPositions: [PortfolioSmartPosition]!
}

type PortfolioClaimables {
  totalUSD: Float!
  v2PositionClaimables: [V2PoolClaim]!
  v3PositionClaimables: [V3PoolClaim]!
  smartPositionClaimables: [SmartPoolClaim]!
  furoClaimables: [FuroClaim]!
}

type V2PoolClaim {
  position: V2PortfolioPosition!
  token: SimpleToken!
}

type V3PoolClaim {
  position: V3PortfolioPosition!
  token: SimpleToken!
}

type SmartPoolClaim {
  position: PortfolioSmartPosition!
  token: SimpleToken!
}

type FuroClaim {
  position: FuroPosition!
  token: SimpleToken!
}

type PortfolioWallet {
  totalUSD: Float!
  amountUSD24Change: Float!
  percentageChange24h: Float!
  tokens: [PortfolioToken]!
}

type Query {
  portfolioWallet(id: ID!): PortfolioWallet!
  portfolioLiquidityPositions(id: ID!): PortfolioPositions!
  portfolioClaimables(id: ID!): PortfolioClaimables!
  pools(chainId: ID!): [Pool]
}